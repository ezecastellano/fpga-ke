KCPSM3 Assembler log file for program 'program.psm'.
Generated by KCPSM3 version 1.30
Ken Chapman (Xilinx Ltd) 2005.
19Aug2012-16:59:09

 Addr Code

 000                          ; constants
 000                          CONSTANT read_strobe, 08
 000                          CONSTANT write_strobe, 04
 000                          CONSTANT red, E0
 000                          CONSTANT yellow, D8
 000                          CONSTANT green, 1C
 000                          CONSTANT blue, 03
 000                          CONSTANT white, FF
 000                          CONSTANT black, 00
 000                          ; registers
 000                          NAMEREG s0, data_lo
 000                          NAMEREG s1, data_hi
 000                          NAMEREG s2, v_counter
 000                          NAMEREG s3, h_counter
 000                          NAMEREG s4, color2
 000                          NAMEREG s5, write
 000                          NAMEREG s6, data_in
 000                          NAMEREG s7, zero
 000                          NAMEREG s8, read
 000                          NAMEREG s9, color1
 000                          ;
 000                          NAMEREG sA, rd_addr_lo
 000                          NAMEREG sB, rd_addr_mi
 000                          NAMEREG sC, rd_addr_hi
 000                          NAMEREG sD, wr_addr_lo
 000                          NAMEREG sE, wr_addr_mi
 000                          NAMEREG sF, wr_addr_hi
 000                          ADDRESS 000
 000                          ;jump halt
 000  00C00                   LOAD rd_addr_hi[sC], 00
 001  00B9C                   LOAD rd_addr_mi[sB], 9C
 002  00AEF                   LOAD rd_addr_lo[sA], EF
 003  00F00                   LOAD wr_addr_hi[sF], 00
 004  00E9C                   LOAD wr_addr_mi[sE], 9C
 005  00DEF                   LOAD wr_addr_lo[sD], EF
 006  00200                   LOAD v_counter[s2], 00
 007  00300                   LOAD h_counter[s3], 00
 008  00808                   LOAD read[s8], read_strobe[08]
 009  00504                   LOAD write[s5], write_strobe[04]
 00A  00700                   LOAD zero[s7], 00
 00B  009FF                   LOAD color1[s9], white[FF]
 00C  00400                   LOAD color2[s4], black[00]
 00D  01090                   LOAD data_lo[s0], color1[s9]
 00E  01190                   LOAD data_hi[s1], color1[s9]
 00F  3C001                   ENABLE INTERRUPT
 010                    main: 
 010  3001D                   CALL read_word[01D]
 011  15040                   COMPARE data_lo[s0], color2[s4]
 012  31048                   CALL Z, change_color[048]
 013  30033                   CALL inc_counters[033]
 014  14300                   COMPARE h_counter[s3], 00
 015  31041                   CALL Z, next_row[041]
 016  14300                   COMPARE h_counter[s3], 00
 017  3143A                   CALL NZ, next_colomn[03A]
 018  142D3                   COMPARE v_counter[s2], D3
 019  31058                   CALL Z, swap_colors[058]
 01A  2C908                   OUTPUT color1[s9], 08
 01B  2C407                   OUTPUT color2[s4], 07
 01C  34010                   JUMP main[010]
 01D                          ;
 01D                          ;
 01D               read_word: 
 01D  2CA02                   OUTPUT rd_addr_lo[sA], 02
 01E  2CB03                   OUTPUT rd_addr_mi[sB], 03
 01F  2CC04                   OUTPUT rd_addr_hi[sC], 04
 020  2C805                   OUTPUT read[s8], 05
 021         wait_op_done_rd: 
 021  04606                   INPUT data_in[s6], 06
 022  14601                   COMPARE data_in[s6], 01
 023  35421                   JUMP NZ, wait_op_done_rd[021]
 024  2C706                   OUTPUT zero[s7], 06
 025  04000                   INPUT data_lo[s0], 00
 026  04101                   INPUT data_hi[s1], 01
 027  2A000                   RETURN
 028                          ;
 028              write_word: 
 028  2C000                   OUTPUT data_lo[s0], 00
 029  2C101                   OUTPUT data_hi[s1], 01
 02A  2CD02                   OUTPUT wr_addr_lo[sD], 02
 02B  2CE03                   OUTPUT wr_addr_mi[sE], 03
 02C  2CF04                   OUTPUT wr_addr_hi[sF], 04
 02D  2C505                   OUTPUT write[s5], 05
 02E         wait_op_done_wr: 
 02E  04606                   INPUT data_in[s6], 06
 02F  14601                   COMPARE data_in[s6], 01
 030  3542E                   JUMP NZ, wait_op_done_wr[02E]
 031  2C706                   OUTPUT zero[s7], 06
 032  2A000                   RETURN
 033                          ;
 033            inc_counters: 
 033  18301                   ADD h_counter[s3], 01
 034  14344                   COMPARE h_counter[s3], 44
 035  31037                   CALL Z, inc_v_counter[037]
 036  2A000                   RETURN
 037                          ;
 037           inc_v_counter: 
 037  00300                   LOAD h_counter[s3], 00
 038  18201                   ADD v_counter[s2], 01
 039  2A000                   RETURN
 03A                          ;
 03A                          ; adjust counters for next colomn
 03A             next_colomn: 
 03A  18A01                   ADD rd_addr_lo[sA], 01
 03B  1AB00                   ADDCY rd_addr_mi[sB], 00
 03C  1AC00                   ADDCY rd_addr_hi[sC], 00
 03D  18D01                   ADD wr_addr_lo[sD], 01
 03E  1AE00                   ADDCY wr_addr_mi[sE], 00
 03F  1AF00                   ADDCY wr_addr_hi[sF], 00
 040  2A000                   RETURN
 041                          ;
 041                          ; adjust counters for next row
 041                next_row: 
 041  18A4D                   ADD rd_addr_lo[sA], 4D
 042  1AB01                   ADDCY rd_addr_mi[sB], 01
 043  1AC00                   ADDCY rd_addr_hi[sC], 00
 044  18D4D                   ADD wr_addr_lo[sD], 4D
 045  1AE01                   ADDCY wr_addr_mi[sE], 01
 046  1AF00                   ADDCY wr_addr_hi[sF], 00
 047  2A000                   RETURN
 048                          ;
 048            change_color: 
 048  01090                   LOAD data_lo[s0], color1[s9]
 049  01190                   LOAD data_hi[s1], color1[s9]
 04A  30028                   CALL write_word[028]
 04B  2A000                   RETURN
 04C                          ;
 04C                   delay: 
 04C  3C000                   DISABLE INTERRUPT
 04D  00800                   LOAD read[s8], 00
 04E  00500                   LOAD write[s5], 00
 04F                   loop1: 
 04F  18701                   ADD zero[s7], 01
 050  1A800                   ADDCY read[s8], 00
 051  1A500                   ADDCY write[s5], 00
 052  35C4F                   JUMP NC, loop1[04F]
 053  00808                   LOAD read[s8], read_strobe[08]
 054  00504                   LOAD write[s5], write_strobe[04]
 055  00700                   LOAD zero[s7], 00
 056  3C001                   ENABLE INTERRUPT
 057  2A000                   RETURN
 058                          ;
 058             swap_colors: 
 058  3004C                   CALL delay[04C]
 059  0F940                   XOR color1[s9], color2[s4]
 05A  0F490                   XOR color2[s4], color1[s9]
 05B  0F940                   XOR color1[s9], color2[s4]
 05C  01090                   LOAD data_lo[s0], color1[s9]
 05D  01190                   LOAD data_hi[s1], color1[s9]
 05E  00C00                   LOAD rd_addr_hi[sC], 00
 05F  00B9C                   LOAD rd_addr_mi[sB], 9C
 060  00AEF                   LOAD rd_addr_lo[sA], EF
 061  00F00                   LOAD wr_addr_hi[sF], 00
 062  00E9C                   LOAD wr_addr_mi[sE], 9C
 063  00DEF                   LOAD wr_addr_lo[sD], EF
 064  00300                   LOAD h_counter[s3], 00
 065  00200                   LOAD v_counter[s2], 00
 066  2A000                   RETURN
 067                          ;
 067                    halt: 
 067  34067                   JUMP halt[067]
 068                          ;
 068                     isr: 
 068  04707                   INPUT zero[s7], 07
 069  2C707                   OUTPUT zero[s7], 07
 06A                          ; OUTPUT zero,08
 06A  00700                   LOAD zero[s7], 00
 06B  38001                   RETURNI ENABLE
 3FF                          ADDRESS 3FF
 3FF  34068                   JUMP isr[068]
